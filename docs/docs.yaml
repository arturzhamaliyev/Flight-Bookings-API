openapi: 3.0.0
info:
  title: Flight-Booking API
  description: API for managing customers and booking flight tickets
  version: 0.0.1
servers:
  - url: "{protocol}://{domain}:{port}/{basePath}"
    variables:
      protocol:
        enum:
          - "http"
          - "https"
        default: "http"
      domain:
        default: "localhost"
      port:
        default: "8080"
      basePath:
        default: "api/v1"
paths:
  /users/sign-up:
    post:
      summary: Register
      tags:
        - user
      description: create account
      requestBody:
        description: User data to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrateUserRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrateUserResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /users/sign-in:
    post:
      summary: Login
      tags:
        - user
      description: login into account
      requestBody:
        description: User credentials to be checked
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: OK
          headers:
            Set-Cookie:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /users/sign-out:
    post:
      summary: Logout
      tags:
        - user
      description: logout from an account
      responses:
        '200':
          description: OK
          headers:
            Set-Cookie:
              schema:
                $ref: '#/components/schemas/TokenResponse'
components:
  responses:
    BadRequest:
      description: The client side error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Client is unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: The server side error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    RegistrateUserRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          description: The user's email address.
        password:
          type: string
          description: The user's password.
        phone:
          type: string
          description: The user's phone number.
    RegistrateUserResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The user's id.
        phone:
          type: string
          description: The user's phone number.
        email:
          type: string
          format: email
          description: The user's email address.
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          description: The user's email address.
        password:
          type: string
          description: The user's password.
    TokenResponse:
      token:
        type: string
        description: Auth token. 
    Error:
      type: object
      required:
          - code
          - message
      properties:
        code:
          type: string
        message:
          type: string
tags:
  - name: user
    description: Endpoints interacting with users.
